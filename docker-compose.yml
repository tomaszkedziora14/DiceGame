version: '3'

networks:
  nginx-php-mysql-node:

services:

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-container
    ports:
      - "8081:80"
    volumes:
      - ./app:/var/www/project
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql

  php:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php74-container
    ports:
      - "9001:9000"
    volumes:
      - ./app:/var/www/project

  mysql:
    image: mysql:8
    container_name: mysql8-container
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: mydb

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8002:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: secret

#  cron:
#    build: . # Ścieżka do folderu, w którym znajduje się Dockerfile
#    volumes:
#      - ./cronfile:/etc/cron.d/cronfile # Montujemy plik konfiguracyjny
#      - ./mysql/mysql.sock:/var/run/mysqld/mysqld.sock # Montujemy plik mysql.sock
#    restart: always
#  cron:
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#    # run crond as main process of container
#    entrypoint: [ "bash", "-c", "cron -f"]
#    depends_on:
#      - mysql

#  cron:
#    image: demo-image:latest
#    entrypoint: /bin/bash
#    command: ["cron", "-f"]



